{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newVnet": {
            "type": "string",
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "false"
            ],
            "metadata": {
                "description": "Create a new VNet for the NetApp Data Broker to be placed onto?"
            }
        },
        "newVnetCondition": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Create a new VNet for the NetApp Data Broker to be placed onto?"
            }
        },
        "existingVnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Existing VNet to deploy the NetApp Data Broker onto. PLEASE NOTE: VNet's are region specific. If you're deploying onto East US2, your existing VNet must also be on East US2."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Existing Subnet to deploy the NetApp Data Broker onto. PLEASE NOTE: Subnet's are region specific. If you're deploying onto East US2, your existing Subnet must also be on East US2."
            }
        },
        "existingVnetResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the resource group that contains the existing VNet."
            }
        },
        "newVnetName": {
            "type": "string",
            "defaultValue": "myNewVnet",
            "metadata": {
                "description": "Choose a name for the newly created VNet to deploy the NetApp Data Broker onto."
            }
        },
        "newSubnetName": {
            "type": "string",
            "defaultValue": "myNewSubnet",
            "metadata": {
                "description": "Choose a name for the newly created Subnet to deploy the NetApp Data Broker onto. PLEASE NOTE: Subnet's are region specific."
            }
        },
        "virtualMachineName": {
            "type": "string"
        },
        "adminPublicKey": {
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQBrSNSWSz3ANEwR3Vb7mBbRqp8LmkcKbBFUJ1Zcd9dT97bq+n+iMRhHR1BdJq5prR8ZtqHQe5mi8fdq+/abEQlMNwFmyKvJfTccRGv5RCzJEvFIFZZHAHBUKy9PIXNCKbofhREVFAN+KYp8013reJaZ5mcMm4Fh1/1rwmSDVt3/k+deJt9515Y5YdOgjpcRGHf7vy0bAzEMHDQqlL+cxBXJv9TGaCxiDI1F84NG91a3OvRImlBP6vTHuU+lkH5XbVTEp4qEBL1Izo00gVV7urwpc29TmclApErZg7cBzjHXyK5E2lFh2zIAe6BGSWFw2j3JdGGFCsMMbE+Ae88Ri5Lb rsa-key-20190930",
            "type": "string"
        },
        "netAppDataBrokerInstallLink": {
            "type": "string",
            "defaultValue": "https://cf.cloudsync.netapp.com/5d92091c18887d0009748a58_installer"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "rgName": "[resourceGroup().name]",
        "deployLinuxScriptURL": "https://raw.githubusercontent.com/rbergertd/netappdatabroker/master/netapp-databroker-nested.json",
        "storageAccountName": "[tolower(concat('dabrsa',uniqueString(resourceGroup().id)))]",
        "vnetAddressRange": "10.0.0.0/24",
        "subnetAddressRange": "10.0.0.0/26",
        "existingNetworkSubnetId": "[resourceId(parameters('existingVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "newNetworkVnetId": "[resourceId(variables('rgName') ,'Microsoft.Network/virtualNetworks',parameters('newVnetName'))]",
        "newNetworkSubnetId": "[concat(variables('newNetworkVnetId'), '/subnets/', parameters('newSubnetName'))]",
        "virtualMachineSize": "Standard_DS3_v2",
        "storageAccountType": "Standard_GRS",
        "adminUsername": "databroker",
        "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), '-nsg')]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-pip')]",
        "publicIpAddressType": "Dynamic",
        "publicIpAddressSku": "Basic"
    },
    "resources": [
        {
            "condition": "[equals(parameters('newVnet'), 'yes')]",
            "name": "[parameters('newVnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[variables('location')]",
            "apiVersion": "2019-04-01",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('newSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressRange')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[if(equals(parameters('newVnet'), 'yes'), variables('newNetworkSubnetId'), variables('existingNetworkSubnetId'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(variables('rgName'), 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(variables('rgName'), 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "OpenLogic",
                        "offer": "CentOS",
                        "sku": "7.4",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(variables('rgName'), 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "name": "microsoft.custom-script-linux-20171103230709",
            "apiVersion": "2015-01-01",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('deployLinuxScriptURL')]"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('virtualMachineName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "netAppDataBrokerInstallLink": {
                        "value": "[parameters('netAppDataBrokerInstallLink')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[variables('adminUsername')]"
        }
    }
}